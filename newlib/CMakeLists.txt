include(ExternalProject)

set(NEWLIB_SRC ${CMAKE_CURRENT_BINARY_DIR}/src)
set(NEWLIB_BIN ${CMAKE_CURRENT_BINARY_DIR}/bin)
set(NEWLIB_INSTALL ${CMAKE_CURRENT_BINARY_DIR}/install)
set(NEWLIB_INCLUDE ${NEWLIB_INSTALL}/x86_64-elf/include)
set(NEWLIB_LOCATION ${NEWLIB_INSTALL}/x86_64-elf/lib/no-red-zone/libc.a)
set(NOSYS_LOCATION ${NEWLIB_INSTALL}/x86_64-elf/lib/no-red-zone/libnosys.a)

set(
  NEWLIB_CONFIG_OPTIONS
  --prefix /
  --program-prefix x86-64-elf-
  --target=x86_64-elf
)

set(NEWLIB_COMPILE_OPTIONS
  -ggdb
  -O0
  -Wno-implicit-function-declaration)
list(APPEND NEWLIB_COMPILE_OPTIONS ${FREESTANDING_COMPILE_OPTIONS})

list(JOIN NEWLIB_COMPILE_OPTIONS " " NEWLIB_CFLAGS)
set(NEWLIB_CONFIG_ENV
  "CFLAGS_FOR_TARGET=${NEWLIB_CFLAGS}"
  "CC_FOR_TARGET=${CMAKE_C_COMPILER}"
  "AR_FOR_TARGET=${CMAKE_AR}"
  "AS_FOR_TARGET=${CMAKE_AS}"
  "DLLTOOL_FOR_TARGET=${CMAKE_DLLTOOL}"
  "LD_FOR_TARGET=${CMAKE_LINKER}"
  "LIPO_FOR_TARGET=${CMAKE_LIPO}"
  "NM_FOR_TARGET=${CMAKE_NM}"
  "RANLIB_FOR_TARGET=${CMAKE_RANLIB}"
  "STRIP_FOR_TARGET=${CMAKE_STRIP}"
  "WINDRES_FOR_TARGET=${CMAKE_WINDRES}"
  "WINDMC_FOR_TARGET=${CMAKE_WINDMC}"
  "OBJCOPY_FOR_TARGET=${CMAKE_OBJCOPY}"
  "OBJDUMP_FOR_TARGET=${CMAKE_OBJDUMP}"
  "READELF_FOR_TARGET=${CMAKE_READELF}"
)

externalproject_add(
  newlib
  SOURCE_DIR ${NEWLIB_SRC}
  BINARY_DIR ${NEWLIB_BIN}
  INSTALL_DIR ${NEWLIB_INSTALL}
  URL "ftp://sourceware.org/pub/newlib/newlib-4.2.0.20211231.tar.gz"
  CONFIGURE_COMMAND ${CMAKE_COMMAND} -E env ${NEWLIB_CONFIG_ENV} ${NEWLIB_SRC}/configure ${NEWLIB_CONFIG_OPTIONS}
  BUILD_COMMAND make
  INSTALL_COMMAND make DESTDIR=${NEWLIB_INSTALL} install
)

file(MAKE_DIRECTORY ${NEWLIB_INCLUDE})

add_library(libc IMPORTED STATIC GLOBAL)
add_library(libnosys IMPORTED STATIC GLOBAL)
add_dependencies(libc newlib)

set_target_properties(
  libc PROPERTIES
  IMPORTED_LOCATION ${NEWLIB_LOCATION}
  INTERFACE_INCLUDE_DIRECTORIES ${NEWLIB_INCLUDE}
  INTERFACE_COMPILE_DEFINITIONS XOPEN_SOURCE=700
)

set(
  LIBSYS_SRCS
  close.c
  fstat.c
  isatty.c
  lseek.c
  read.c
  sbrk.c
  write.c
  _exit.c
  kill.c
  getpid.c
)

set(LIBSYS_COMPILE_OPTIONS ${DEBUG_COMPILE_OPTIONS})
list(APPEND LIBSYS_COMPILE_OPTIONS ${FREESTANDING_COMPILE_OPTIONS})

add_library(sys ${LIBSYS_SRCS})
add_dependencies(sys libc)
target_include_directories(sys PUBLIC
  ${CMAKE_SOURCE_DIR}/include
  ${NEWLIB_INCLUDE})
target_compile_definitions(sys PUBLIC
  _XOPEN_SOURCE=700
  _FORTIFY_SOURCE=1
  __OPTIMIZE__=0)
target_compile_options(sys PUBLIC
  ${LIBSYS_COMPILE_OPTIONS})
